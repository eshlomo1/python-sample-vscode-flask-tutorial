# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool: PythonCodeAgent

strategy:
  matrix:
    Python27:
      python.version: 2.7
    Python3:
      python.version: '3.12.2'
steps:

- task: UsePythonVersion@0
  inputs:
    addToPath: true 
    architecture: 'x64' # 'x86' | 'x64'. Required. Architecture. Default: x64.
    versionSpec: '$(python.version)'
    disableDownloadFromRegistry: false 
    #versionSpec: '3.x' # string. Required. Version spec. Default: 3.x.
  displayName: 'Use Python $(python.version)'

- bash:   |
    env:
      client_secret: iz6httpihtjvob3omiavlz7d56e2lxdwat2q2fo2pqct2xvjlcpa
      ado_pat: ado_pat

- script: |
    python -m pip install flake8
    flake8 .
  displayName: 'Run lint tests'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- task: AdvancedSecurity-Codeql-Autobuild@1
  displayName: AutoBuild
 
- task: AdvancedSecurity-Codeql-Analyze@1
  displayName: Perform CodeQL Analysis

- task: AdvancedSecurity-Codeql-Init@1

- task: AdvancedSecurity-Dependency-Scanning@1 #dependency scanning
 
